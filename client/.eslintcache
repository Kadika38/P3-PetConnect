[{"E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\index.js":"1","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\App.js":"2","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\pages\\Home.js":"3","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\pages\\Landing.js":"4","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\components\\Cloudinary.js":"5"},{"size":219,"mtime":1661623250457,"results":"6","hashOfConfig":"7"},{"size":758,"mtime":1661749438546,"results":"8","hashOfConfig":"7"},{"size":224,"mtime":1661623250460,"results":"9","hashOfConfig":"7"},{"size":2949,"mtime":1661623250461,"results":"10","hashOfConfig":"7"},{"size":2511,"mtime":1661623250453,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ijk9pd",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":3,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\index.js",[],["26","27"],"E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\App.js",["28"],"E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\pages\\Home.js",["29","30"],"import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n// import { QUERY_MATCHUPS } from '../utils/queries';\n\nconst Home = () => {\n    return (\n\n    <div>Hi!</div>\n    \n)};\n\nexport default Home;\n","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\pages\\Landing.js",["31"],"import React from 'react'\n\nexport default function Landing() {\n    return (\n        <div>\n            <section class=\"page-section search\" id=\"search\">\n                <div class=\"container\">\n\n                    <h2 class=\"page-section-heading text-center texwt-uppercase text-secondary mb-0\" id=\"topPage\">Top Breeds</h2>\n\n                    <div class=\"divider-custom\">\n                        <div class=\"divider-custom-line\"></div>\n                        <div class=\"divider-custom-icon\"><i class=\"fas fa-paw fa-beat\"></i></div>\n                        <div class=\"divider-custom-line\"></div>\n                    </div>\n\n\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-md-6 col-lg-4 mb-5\">\n                            <div class=\"search-item mx-auto\"\n                                data-toggle=\"modal\"\n                                data-target=\"#modal1\">\n                                <div\n                                    class=\"search-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\n                                    <div class=\"search-item-caption-content text-center text-white\">\n                                        <p id=\"breed-main\">Beagle</p></div>\n                                </div>\n                                <img class=\"img-fluid\" src=\"/images/beagle.png\" alt=\"beagle icon\" />\n                                <img class=\"img-fluid\" src=\"/images/bulldog.png\" alt=\"bulldog icon\" />\n                                <img class=\"img-fluid\" src=\"/images/poodle.png\" alt=\"poodle icon\" />\n                                \n\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-6 col-lg-4 mb-5\">\n                            <div class=\"search-item mx-auto\"\n                                data-toggle=\"modal\"\n                                data-target=\"#{{icon.modal}}\">\n                                <div\n                                    class=\"search-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\n                                    <div class=\"search-item-caption-content text-center text-white\">\n                                        \n                                        <a class=\"nav-link py-3 px-0 px-lg-3 rounded breed-link\" href=\"/results/all-{{lowerIt icon.name}}-all-all-all\"></a></div>\n                                </div>\n                                <img class=\"img-fluid\" src=\"/images/german-s.png\" alt=\"germans icon\" />\n                                <img class=\"img-fluid\" src=\"/images/corgi.png\" alt=\"corgi icon\" />\n                                <img class=\"img-fluid\" src=\"/images/rotty.png\" alt=\"rotty icon\" />\n                                \n\n\n\n\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n\n    )\n}\n","E:\\Coding\\bootcamp\\P3-PetConnect\\client\\src\\components\\Cloudinary.js",["32","33","34","35","36","37","38","39","40"],"import { Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MATCHUPS } from '../utils/queries';\nimport { TypeOrFieldNameRegExp } from '@apollo/client/cache/inmemory/helpers';\n\nconst Cloudinary = () => {\n    const styleImageContainer = {\n        position: 'relative',\n        width: '300px',\n        height: '300px',\n        margin: '20px',\n    }\n\n    const imageStyle = {\n        width: '300px',\n        height: '300px',\n        objectFit: 'cover',\n    }\n\n    const imagePreviewContainer = {\n        display: 'flex',\n        justifyContent: 'left',\n    }\n\n    const closeIcon = {\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        fontSize: '20px',        \n    }\n\n    const [images, setImages] = useState([]);\n    const [imageToRemove, setImageToRemove] = useState(null);\n\n    function handleRemoveImg(imgObj){\n        setImageToRemove(imgObj.public_id);\n        axios.delete(`http://localhost:3001/${imgObj.public_id}`)\n        .then(()=> {\n            setImageToRemove(null);\n            setImages((prev) => prev.filter( (img) => img.public_id !== imgObj.public_id))\n        })\n        .catch((e) => console.log(e))\n\n    }\n\n    function handleOpenWidget(){\n        let myWidget = window.cloudinary.createUploadWidget(\n        {\n            cloudName: 'dwwkixeof', \n            uploadPreset: 'ml_default',\n        }, \n        (error, result) => { \n              if (!error && result && result.event === \"success\") { \n                setImages((prev) => [...prev, {url: result.info.url, public_id: result.info.public_id}])\n                console.log('Done! Here is the image info: ', result.info); \n              }\n            }\n        );\n        // open widget\n        myWidget.open();\n    }\n\n    return (\n    <div className=\"Cloudinary\">\n        <button id=\"upload-widget\" className=\"cloudinary-button\" onClick={()=> handleOpenWidget()}>\n            Upload\n        </button>\n        <div className=\"images-preview-container\" style={imagePreviewContainer}>\n            {/* Show Pictures*/}\n            {images.map((image) => (\n                <div className=\"image-preview\" style={styleImageContainer}>\n                    <img src={image.url} style={imageStyle}/>\n                    {imageToRemove != image.public_id && <i className=\"fa fa-times-circle close-icon\" style={closeIcon} onClick={() => handleRemoveImg(image)}></i>}\n                </div>\n            )\n            )}\n        </div>\n    </div>\n    );\n}\n\nexport default Cloudinary;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":12},{"ruleId":"45","severity":1,"message":"49","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":14},{"ruleId":"45","severity":1,"message":"50","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":44,"column":41,"nodeType":"53","endLine":44,"endColumn":152},{"ruleId":"45","severity":1,"message":"49","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":14},{"ruleId":"45","severity":1,"message":"50","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":18},{"ruleId":"45","severity":1,"message":"54","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":24},{"ruleId":"45","severity":1,"message":"55","line":4,"column":10,"nodeType":"47","messageId":"48","endLine":4,"endColumn":31},{"ruleId":"56","severity":2,"message":"57","line":32,"column":33,"nodeType":"47","messageId":"58","endLine":32,"endColumn":41},{"ruleId":"56","severity":2,"message":"57","line":33,"column":47,"nodeType":"47","messageId":"58","endLine":33,"endColumn":55},{"ruleId":"56","severity":2,"message":"59","line":37,"column":9,"nodeType":"47","messageId":"58","endLine":37,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":72,"column":21,"nodeType":"53","endLine":72,"endColumn":62},{"ruleId":"62","severity":1,"message":"63","line":73,"column":36,"nodeType":"64","messageId":"65","endLine":73,"endColumn":38},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useQuery' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'QUERY_MATCHUPS' is defined but never used.","'TypeOrFieldNameRegExp' is defined but never used.","no-undef","'useState' is not defined.","undef","'axios' is not defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]