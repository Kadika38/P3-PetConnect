[{"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\index.js":"1","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\App.js":"2","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Topbottom\\Header.js":"3","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Profile\\Profile.js":"4","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Topbottom\\Footer.js":"5","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\About.js":"6","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\Contact.js":"7","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Login\\Login.js":"8","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Signup\\Signup.js":"9","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\FAQ.js":"10","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Messages\\Message.js":"11","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Landing\\Landing.js":"12","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\components\\Contacts.js":"13","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\queries.js":"14","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\auth.js":"15","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\mutations.js":"16"},{"size":233,"mtime":1662010059116,"results":"17","hashOfConfig":"18"},{"size":3694,"mtime":1662010059107,"results":"19","hashOfConfig":"18"},{"size":3270,"mtime":1662057298438,"results":"20","hashOfConfig":"18"},{"size":3103,"mtime":1662058040686,"results":"21","hashOfConfig":"18"},{"size":1814,"mtime":1662010059126,"results":"22","hashOfConfig":"18"},{"size":610,"mtime":1662010059117,"results":"23","hashOfConfig":"18"},{"size":2687,"mtime":1661832637521,"results":"24","hashOfConfig":"18"},{"size":2275,"mtime":1662055624034,"results":"25","hashOfConfig":"18"},{"size":3405,"mtime":1662056783505,"results":"26","hashOfConfig":"18"},{"size":2266,"mtime":1662010059118,"results":"27","hashOfConfig":"18"},{"size":723,"mtime":1662010059123,"results":"28","hashOfConfig":"18"},{"size":3218,"mtime":1662010059119,"results":"29","hashOfConfig":"18"},{"size":450,"mtime":1662010059108,"results":"30","hashOfConfig":"18"},{"size":583,"mtime":1662010059130,"results":"31","hashOfConfig":"18"},{"size":1084,"mtime":1661832472604,"results":"32","hashOfConfig":"18"},{"size":1108,"mtime":1662010059129,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"o949hk",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\index.js",[],["73","74"],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\App.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Topbottom\\Header.js",["75","76","77","78","79","80"],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Profile\\Profile.js",["81"],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Topbottom\\Footer.js",["82"],"import React from 'react'\r\nimport './style.css';\r\n\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div>\r\n\r\n    <footer class=\"footer text-center\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n\r\n\r\n                <div class=\"col-lg-4 mb-5 mb-lg-0\">\r\n                    <h4 class=\"text-uppercase mb-4\">Follow us for more!</h4>\r\n                    <a class=\"btn btn-outline-light btn-social mx-1\" href=\"#!\"><i\r\n                            class=\"fab fa-fw fa-facebook-f\"></i></a>\r\n                    <a class=\"btn btn-outline-light btn-social mx-1\" href=\"#!\"><i class=\"fab fa-fw fa-twitter\"></i></a>\r\n                    <a class=\"btn btn-outline-light btn-social mx-1\" href=\"#!\"><i\r\n                            class=\"fab fa-fw fa-linkedin-in\"></i></a>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4 mb-5 mb-lg-0\">\r\n                    <h4 class=\"text-uppercase mb-4\">Contact</h4>\r\n                    <p class=\"lead mb-0\">\r\n                        info@petconnect.com\r\n                        <br />\r\n                        800-867-5309\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4\">\r\n                    <h4 class=\"text-uppercase mb-4\">About PETCONNECT</h4>\r\n                    <p class=\"lead mb-0\">\r\n                        <a id=\"contact-info\" href=\"/faq\">FAQ</a> <br/>\r\n                        <a id=\"contact-info\" href=\"/about\">About Petconnect</a> <br/> \r\n                        <a id=\"contact-info\" href=\"#\">Testimonials</a> <br/>\r\n\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n\r\n    <div class=\"copyright py-4 text-center text-white\">\r\n        <div class=\"container\"><small>Copyright &copy; PetConnect 2022</small></div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\About.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\Contact.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Login\\Login.js",["83","84"],"import React, {useState} from 'react'\r\nimport './style.css'\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\nimport Auth from '../../utils/auth';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\r\n  \r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n    // update state based on form input changes\r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target;\r\n\r\n      setFormState({\r\n        ...formState,\r\n        [name]: value,\r\n      });\r\n    };\r\n\r\n    // submit form\r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n      console.log(formState);\r\n      try {\r\n        const { data } = await login({\r\n          variables: { ...formState },\r\n        });\r\n\r\n        Auth.login(data.login.token);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n      // clear form values\r\n      setFormState({\r\n        email: '',\r\n        password: '',\r\n      });\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div class=\"splitMenu-container\" id=\"login\">\r\n\r\n\r\n          <div class=\"login-container\">\r\n\r\n            <h1 >Login to your account</h1>\r\n\r\n\r\n            {/* Call the login states */}\r\n            <form onSubmit={handleFormSubmit}>\r\n\r\n\r\n              <input id=\"username-login\" type=\"text\" placeholder=\"Username\" name=\"username\" required onChange={handleChange} />\r\n              <input id=\"password-login\" type=\"text\" placeholder=\"Password\" name=\"password\" required onChange={handleChange}/>\r\n              <button id=\"login-submit\" type=\"submit\">Login</button>\r\n\r\n\r\n            </form>\r\n\r\n\r\n            <div class=\"fb-login-button\" data-width=\"30\" data-size=\"medium\" data-button-type=\"login_with\" data-layout=\"default\" data-auto-logout-link=\"false\" data-use-continue-as=\"true\"></div>\r\n\r\n          </div>\r\n\r\n\r\n          <div class=\"signUp-container\">\r\n\r\n            <h1>New Here?</h1>\r\n            <p>Well then you should join us obviously</p>\r\n\r\n            \r\n            <Link to=\"/Signup\"><button id=\"signUpBtn\" onClick={'/Signup'}>Sign Up</button></Link>\r\n\r\n          </div>\r\n\r\n        </div></div>\r\n    )\r\n  }\r\n\r\n","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Signup\\Signup.js",["85","86"],"import React, { useState } from 'react'\r\nimport './style.css'\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Auth from '../../utils/auth';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Signup() {\r\n\r\n  const [formState, setFormState] = useState({\r\n    first: '',\r\n    last: '',\r\n    dob:'',\r\n    zipCode: '',\r\n    \r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [addUser, { error, data }] = useMutation(ADD_USER);\r\n  let navigate = useNavigate()\r\n  const handleChange = (event) => {\r\n    \r\n    const { name, value } = event.target;\r\n    console.log(name)\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addUser.token);\r\n      navigate.push('/profile')\r\n      \r\n\r\n    } catch (e) {\r\n      \r\n      console.error(e);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2 class=\"signupH2\">SIGN-UP</h2>\r\n\r\n      <p>What Arf you waiting for?</p>\r\n\r\n      <div class=\"divider-custom\">\r\n        <div class=\"divider-custom-line\"></div>\r\n        <div class=\"divider-custom-icon\"><i class=\"fas fa-paw fa-beat\"></i></div>\r\n        <div class=\"divider-custom-line\"></div>\r\n      </div>\r\n\r\n\r\n      <form class=\"form signup-form\" onSubmit={handleFormSubmit}>\r\n        <div class=\"form-group\">\r\n          <label for=\"fn-signup\">First Name:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"fn-signup\" name='first' value={formState.first} onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"ln-signup\">Last Name:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"ln-signup\" name='last' value={formState.last} onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"dob-signup\">Date of Birth:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"dob-signup\" name='dob' value={formState.dob} onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"zip-signup\">Zip Code:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"zip-signup\" name='zipCode' value={formState.zipCode} onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email-signup\">Email:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"email-signup\" name='email' value={formState.email}\r\n            onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"username-signup\">Username:</label>\r\n          <input class=\"form-input\" type=\"text\" id=\"username-signup\" name='username' value={formState.username} onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password-signup\">Password:</label>\r\n          <input class=\"form-input\" type=\"password\" id=\"password-signup\" name='password' value={formState.password}\r\n            onChange={handleChange} />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button id=\"signup-submit\" class=\"btn btn-primary\" type=\"submit\">Sign Up</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\FAQ\\FAQ.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Messages\\Message.js",["87","88","89"],"import React, {useState} from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport Contacts from '../../components/Contacts.js'\r\nimport { QUERY_USER_MESSAGES, QUERY_USER } from '../../utils/queries';\r\n\r\n// TODO: David R. create layout and functionality of message center inbox\r\n\r\nfunction Message() {\r\n    const { loading, data } = useQuery(QUERY_USER_MESSAGES);\r\n    const messages = data?.userMessages\r\n\r\n    const { loading2, data2 } = useQuery(QUERY_USER);\r\n    const user = data2?.user\r\n\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n      <button> new message </button>\r\n\r\n      <Contacts\r\n      user={user}\r\n      messages={messages}\r\n      />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\pages\\Landing\\Landing.js",["90"],"import React from 'react'\r\nimport beagle from '../../images/beagle.png'\r\nimport bulldog from '../../images/bulldog.png'\r\nimport poodle from '../../images/poodle.png'\r\nimport german from '../../images/german-s.png'\r\nimport corgi from '../../images/corgi.png'\r\nimport rotty from '../../images/rotty.png'\r\n\r\n\r\nexport default function Landing() {\r\n    return (\r\n        <div>\r\n             \r\n            <section class=\"page-section search\" id=\"search\">\r\n                <div class=\"container\">\r\n\r\n                    <h2 class=\"page-section-heading text-center texwt-uppercase text-secondary mb-0\" id=\"topPage\">Top Breeds</h2>\r\n\r\n                    <div class=\"divider-custom\">\r\n                        <div class=\"divider-custom-line\"></div>\r\n                        <div class=\"divider-custom-icon\"><i class=\"fas fa-paw fa-beat\"></i></div>\r\n                        <div class=\"divider-custom-line\"></div>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"search-item mx-auto\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#modal1\">\r\n                                <div\r\n                                    class=\"search-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\r\n                                    <div class=\"search-item-caption-content text-center text-white\">\r\n                                        <p id=\"breed-main\">Beagle</p></div>\r\n                                </div>\r\n                                <img class=\"img-fluid\" src={beagle} alt=\"beagle icon\" />\r\n                                <img class=\"img-fluid\" src={bulldog} alt=\"bulldog icon\" />\r\n                                <img class=\"img-fluid\" src={poodle} alt=\"poodle icon\" />\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-sm\">\r\n                            <div class=\"search-item mx-auto\"\r\n                                data-toggle=\"modal\"\r\n                                data-target=\"#{{icon.modal}}\">\r\n                                <div\r\n                                    class=\"search-item-caption d-flex align-items-center justify-content-center h-100 w-100\">\r\n                                    <div class=\"search-item-caption-content text-center text-white\">\r\n                                        \r\n                                        <a class=\"nav-link py-3 px-0 px-lg-3 rounded breed-link\" href=\"/results/all-{{lowerIt icon.name}}-all-all-all\"></a></div>\r\n                                </div>\r\n                                <img class=\"img-fluid\" src={german} alt=\"germans icon\" />\r\n                                <img class=\"img-fluid\" src={corgi} alt=\"corgi icon\" />\r\n                                <img class=\"img-fluid\" src={rotty} alt=\"rotty icon\" />\r\n                                \r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                 \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n\r\n    )\r\n}\r\n","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\components\\Contacts.js",["91"],"import React from \"react\";\r\n\r\n// TODO: David R. create components to display individual contacts\r\n\r\nfunction Contacts ({ user, messages }) {\r\n    return (\r\n       <div className=\"contacts\">\r\n        <img src={user.profilePicture} alt=\"profile picture\"/>\r\n        <h3 className=\"contactName\">{user.first_name} {user.last_name}</h3>\r\n        <h5 className=\"lastMessage\">{messages.lastMessage}</h5>\r\n       </div> \r\n    );\r\n}\r\n\r\nexport default Contacts;","C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\queries.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\auth.js",[],"C:\\Users\\natha\\repos\\P3-PetConnect\\client\\src\\utils\\mutations.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":29,"column":46,"nodeType":"98","endLine":29,"endColumn":49},{"ruleId":"96","severity":1,"message":"99","line":33,"column":22,"nodeType":"98","endLine":33,"endColumn":34},{"ruleId":"96","severity":1,"message":"99","line":34,"column":22,"nodeType":"98","endLine":34,"endColumn":46},{"ruleId":"96","severity":1,"message":"99","line":44,"column":41,"nodeType":"98","endLine":44,"endColumn":53},{"ruleId":"96","severity":1,"message":"99","line":45,"column":21,"nodeType":"98","endLine":45,"endColumn":33},{"ruleId":"96","severity":1,"message":"99","line":46,"column":21,"nodeType":"98","endLine":46,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":7,"column":9,"nodeType":"102","messageId":"103","endLine":7,"endColumn":21},{"ruleId":"96","severity":1,"message":"99","line":37,"column":25,"nodeType":"98","endLine":37,"endColumn":55},{"ruleId":"100","severity":1,"message":"104","line":14,"column":21,"nodeType":"102","messageId":"103","endLine":14,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":14,"column":28,"nodeType":"102","messageId":"103","endLine":14,"endColumn":32},{"ruleId":"100","severity":1,"message":"104","line":26,"column":21,"nodeType":"102","messageId":"103","endLine":26,"endColumn":26},{"ruleId":"100","severity":1,"message":"105","line":26,"column":28,"nodeType":"102","messageId":"103","endLine":26,"endColumn":32},{"ruleId":"100","severity":1,"message":"106","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"100","severity":1,"message":"107","line":9,"column":13,"nodeType":"102","messageId":"103","endLine":9,"endColumn":20},{"ruleId":"100","severity":1,"message":"108","line":12,"column":13,"nodeType":"102","messageId":"103","endLine":12,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":52,"column":41,"nodeType":"98","endLine":52,"endColumn":152},{"ruleId":"111","severity":1,"message":"112","line":8,"column":9,"nodeType":"98","endLine":8,"endColumn":63},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'modalVarible' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","'loading2' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]